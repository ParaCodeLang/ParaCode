/// Patch `Object` to define `patch` method as well as default compare operator
__intern_object_patch__(Object, {
    func patch(self, _patch) {
        return __intern_object_patch__(self, _patch);
    }

    func __eql__(self, other) {
        return __intern_default_compare__(self, other);
    }
});

Type.patch({
    func to_str(self) {
        return self.name;
    }
});

let pyimport = __intern_import_python__;


import "std/types/null.para";
import "std/types/num.para";
import "std/types/float.para";
import "std/types/int.para";
import "std/types/bool.para";
import "std/types/object.para";
import "std/types/func.para";
import "std/types/iterable.para";
import "std/types/array.para";
import "std/types/dict.para";
import "std/types/caseinsensitivedict.para";
import "std/types/str.para";
import "std/types/range.para";
import "std/types/macro.para";

import "std/types/exceptions/exception.para";
import "std/types/exceptions/argumenterror.para";
import "std/types/exceptions/doesnotexisterror.para";
import "std/types/exceptions/macroexpansionerror.para";
import "std/types/exceptions/multipledefinitionerror.para";
import "std/types/exceptions/typeerror.para";

// Type aliases
let object                     =    Object;
let float                      =    Float;
let type                       =    Type;

let array                      =    Array;
let Arr                        =    Array;
let arr                        =    Array;
                                    
let dict                       =    Dict;
let Dictionary                 =    Dict;
let dictionary                 =    Dict;
                                    
let caseinsensitivedict        =    CaseInsensitiveDict;
let CaseInsensitiveDictionary  =    CaseInsensitiveDict;
let caseinsensitivedictionary  =    CaseInsensitiveDict;
let InsensitiveDictionary      =    CaseInsensitiveDict;
let insensitivedictionary      =    CaseInsensitiveDict;
                                    
let num                        =    Num;
let number                     =    Num;
let Number                     =    Num;
                                    
let int                        =    Int;
let Integer                    =    Int;
let integer                    =    Int;
                                    
let str                        =    Str;
let String                     =    Str;
let string                     =    Str;
                                    
let bool                       =    Bool;
let Boolean                    =    Bool;
let boolean                    =    Bool;
                                    
let Function                   =    Func;
let function                   =    Func;
