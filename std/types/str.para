let Str = Array.extend({
    name = 'Str'

    instance = {
        _value = ''

        func __mul__(self, value) {
            let str = "";
            while value {
              str = self.append(str);
              value -= 1;
            }
            return str;
        }

        func __add__(self, value) {
            return self.append(value);
        }

        func __eql__(self, other) {
            if other.type() != self.type() {
                return 0;
            }

            return __intern_default_compare__(self._value, other._value);
        }

        func to_str(self) {
          return self._value;
        }
    }

    func startswith(self, value) {
        return self.find(value) == 0;
    }

    func endswith(self, value) {
        return self.find(value) == self.len() - value.len();
    }

//    func replace(self, toReplace, replaceWith) {
//    }
    
    func __construct__(self, value) {
        self._value = value;
    }

    func clone(self) {
        return Str.new(self._value);
    }

    func append(self, value) {
        return __intern_str_append__(self._value, value.to_str());
    }

    func to_int(self) {
        let len = self.len();
        
        if len <= 0 {
            return 0;
        }

        let smap = "0123456789";
        let value = 0;

        let negative = 0;

        let midx = 0;
        let index = 0;
        
        // apply any unary negative
        while self[index] == '-' {
            negative = !negative;
            index += 1;
        }
        
        while index != len {
            midx = smap.find(self[index]);
            // .find returns -1 if value does not exist in array
            if midx == -1 {
                print("Error: Non-integer character in string");
                return 0;
            }
            // find index in string
            value = value * 10 + midx;
            index += 1;
        }
        if negative {
            return -value;
        }
        return value;
    }

    func reverse(self) {
        let newstr = "";
        let index = self.len();
        while index {
            newstr = newstr.append(self._value[index-1]);
            index -= 1;
        }
        return newstr;
    }

    func to_str(self) {
        return self.name;
    }
    func format() {}
});


Str.format = Func.extend({
    instance = {
        func __call__(self, args) {
            let str = args[0];

            let newstr = "";
            let length = str.len();
            let index = 0;
            let argidx = 1;
            while index != length {
                if str[index] == '%' {
                    newstr += (args[argidx]);
                    argidx += 1;
                }
                else {
                    newstr += str[index];
                }
                index += 1;
            }
            return newstr;
        }
    }
}).new();
